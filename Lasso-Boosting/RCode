n = 50
p = 1000
s = 10
T = 10
lambda_all = (1200:1)/2
L = length(lambda_all)

X = matrix(rnorm(n*p), nrow=n)
beta_true = matrix(rep(0, p), nrow = p)
beta_true[1:s] = 1:s
Y = X %*% beta_true + rnorm(n)

beta = matrix(rep(0, p), nrow = p)
beta_all = matrix(rep(0, p*L), nrow = p)

R = Y
ss = rep(0, p)
for (j in 1:p)
    ss[j] = sum(X[, j]^2)

err = rep(0, L)
for (l in 1:L)
{
    lambda = lambda_all[l]
    for (t in 1:T)
    {
      for (j in 1:p)
      {
		db = sum(R*X[, j])/ss[j]
    b = beta[j]+db
		b = sign(b)*max(0,abs(b)-lambda/ss[j])
		db=b-beta[j]
		R=R-X[, j]*db
		beta[j]=b
          
      }
    }
    beta_all[, l] = beta
    err[l] = sum((beta-beta_true)^2)
}
par(mfrow=c(1,2))
matplot(t(matrix(rep(1, p), nrow = 1)%*%abs(beta_all)), t(beta_all), type = 'l')
plot(lambda_all, err, type = 'l')

